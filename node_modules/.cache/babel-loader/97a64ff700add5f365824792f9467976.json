{"ast":null,"code":"import React from\"react\";import useInput from\"../../../customHooks/useInput\";import classes from\"./CheckOutForm.module.css\";import{emailValidator,nameInputValidator,postalCodeInputValidator,cityInputValidator}from\"../../../UtilityFunctions/inputValidationFunctions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OrderForm=function OrderForm(props){var _useInput=useInput(nameInputValidator),enteredNameValue=_useInput.value,nameInputError=_useInput.hasError,nameChangeHandler=_useInput.valueChangedHandler,nameInputBlurHandler=_useInput.inputBlurHandler,valueIsValid=_useInput.isValid;var _useInput2=useInput(emailValidator),enteredEmailValue=_useInput2.value,emailInputError=_useInput2.hasError,emailChangeHandler=_useInput2.valueChangedHandler,emailInputBlurHandler=_useInput2.inputBlurHandler,emailIsValid=_useInput2.isValid;var _useInput3=useInput(postalCodeInputValidator),enteredPostalCodeValue=_useInput3.value,enteredPostalCodeInputError=_useInput3.hasError,enteredPostalCodeChangeHandler=_useInput3.valueChangedHandler,enteredPostalCodeInputBlurHandler=_useInput3.inputBlurHandler,enteredPostalCodeIsValid=_useInput3.isValid;var _useInput4=useInput(cityInputValidator),enteredCityValue=_useInput4.value,enteredCityInputError=_useInput4.hasError,enteredCityChangeHandler=_useInput4.valueChangedHandler,enteredCityInputBlurHandler=_useInput4.inputBlurHandler,enteredCityIsValid=_useInput4.isValid;var orderInfo={name:enteredNameValue,email:enteredEmailValue,city:enteredCityValue,postalCode:enteredPostalCodeValue};var sendOrderHandler=function sendOrderHandler(event){event.preventDefault();props.orderHandler(orderInfo);// console.log(orderInfo)\n};var formValid=valueIsValid&&emailIsValid&&enteredCityIsValid&&enteredPostalCodeIsValid;if(formValid){props.valid(true);}var confirmationHandler=function confirmationHandler(event){props.confirmation(true);};return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:sendOrderHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(valueIsValid?\"\":classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{value:\"Name\",children:\" Name\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Name\",type:\"text\",id:\"name\",value:enteredNameValue,onChange:nameChangeHandler,onBlur:nameInputBlurHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(emailIsValid?\"\":classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{value:\"Name\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email\",type:\"email\",id:\"email\",value:enteredEmailValue,onChange:emailChangeHandler,onBlur:emailInputBlurHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(enteredPostalCodeIsValid?\"\":classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{value:\"Name\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Postal Code\",type:\"text\",id:\"Postal Code\",value:enteredPostalCodeValue,onChange:enteredPostalCodeChangeHandler,onBlur:enteredPostalCodeInputBlurHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(enteredCityIsValid?\"\":classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{value:\"Name\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"City\",type:\"text\",id:\"City\",value:enteredCityValue,onChange:enteredCityChangeHandler,onBlur:enteredCityInputBlurHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:props.onClose,children:[\" \",\"Cancel\"]}),formValid&&/*#__PURE__*/_jsx(\"button\",{className:classes.submit,onClick:confirmationHandler,children:\"Confirm \"})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.invalid,children:nameInputError&&/*#__PURE__*/_jsx(\"label\",{children:\" Cannot be empty \"})}),/*#__PURE__*/_jsx(\"div\",{className:classes.invalid,children:emailInputError&&/*#__PURE__*/_jsx(\"label\",{children:\" Does not include \\\"@\\\" \"})}),/*#__PURE__*/_jsx(\"div\",{className:classes.invalid,children:enteredPostalCodeInputError&&/*#__PURE__*/_jsx(\"label\",{children:\" Has to be a number over 1 and under 6 \"})}),/*#__PURE__*/_jsx(\"div\",{className:classes.invalid,children:enteredCityInputError&&/*#__PURE__*/_jsx(\"label\",{children:\" Can't be empty \"})})]});};export default OrderForm;","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js"],"names":["React","useInput","classes","emailValidator","nameInputValidator","postalCodeInputValidator","cityInputValidator","OrderForm","props","enteredNameValue","value","nameInputError","hasError","nameChangeHandler","valueChangedHandler","nameInputBlurHandler","inputBlurHandler","valueIsValid","isValid","enteredEmailValue","emailInputError","emailChangeHandler","emailInputBlurHandler","emailIsValid","enteredPostalCodeValue","enteredPostalCodeInputError","enteredPostalCodeChangeHandler","enteredPostalCodeInputBlurHandler","enteredPostalCodeIsValid","enteredCityValue","enteredCityInputError","enteredCityChangeHandler","enteredCityInputBlurHandler","enteredCityIsValid","orderInfo","name","email","city","postalCode","sendOrderHandler","event","preventDefault","orderHandler","formValid","valid","confirmationHandler","confirmation","form","control","invalid","actions","onClose","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useInput from \"../../../customHooks/useInput\";\r\nimport classes from \"./CheckOutForm.module.css\";\r\n\r\nimport {\r\n  emailValidator,\r\n  nameInputValidator,\r\n  postalCodeInputValidator,\r\n  cityInputValidator,\r\n} from \"../../../UtilityFunctions/inputValidationFunctions\";\r\n\r\nconst OrderForm = (props) => {\r\n\r\n  const {\r\n    value: enteredNameValue,\r\n    hasError: nameInputError,\r\n    valueChangedHandler: nameChangeHandler,\r\n    inputBlurHandler: nameInputBlurHandler,\r\n    isValid: valueIsValid,\r\n    // reset: resetInput\r\n  } = useInput(nameInputValidator);\r\n\r\n  const {\r\n    value: enteredEmailValue,\r\n    hasError: emailInputError,\r\n    valueChangedHandler: emailChangeHandler,\r\n    inputBlurHandler: emailInputBlurHandler,\r\n    isValid: emailIsValid,\r\n    // reset: resetEmail\r\n  } = useInput(emailValidator);\r\n\r\n  const {\r\n    value: enteredPostalCodeValue,\r\n    hasError: enteredPostalCodeInputError,\r\n    valueChangedHandler: enteredPostalCodeChangeHandler,\r\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\r\n    isValid: enteredPostalCodeIsValid,\r\n    // reset: enteredPostalCodeEmail\r\n  } = useInput(postalCodeInputValidator);\r\n\r\n  const {\r\n    value: enteredCityValue,\r\n    hasError: enteredCityInputError,\r\n    valueChangedHandler: enteredCityChangeHandler,\r\n    inputBlurHandler: enteredCityInputBlurHandler,\r\n    isValid: enteredCityIsValid,\r\n    // reset: enteredCityEmail\r\n  } = useInput(cityInputValidator);\r\n\r\n\r\n\r\n\r\n  const orderInfo = {\r\n    name: enteredNameValue,\r\n    email: enteredEmailValue,\r\n    city: enteredCityValue,\r\n    postalCode: enteredPostalCodeValue,\r\n  };\r\n\r\n\r\n  const sendOrderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n\r\n    props.orderHandler(orderInfo);\r\n    // console.log(orderInfo)\r\n  };\r\n \r\n  const formValid =\r\n    valueIsValid &&\r\n    emailIsValid &&\r\n    enteredCityIsValid &&\r\n    enteredPostalCodeIsValid;\r\n\r\n\r\n  if (formValid) {\r\n    props.valid(true);\r\n  }\r\n  const confirmationHandler = (event) => {\r\n    props.confirmation(true)\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={sendOrderHandler}>\r\n\r\n      <div className={`${classes.control} ${valueIsValid ? \"\" : classes.invalid}`}>\r\n        <label value=\"Name\"> Name</label>\r\n\r\n        <input\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={enteredNameValue}\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${classes.control} ${emailIsValid ? \"\" : classes.invalid}`}>\r\n        <label value=\"Name\">Email</label>\r\n\r\n        <input\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={enteredEmailValue}\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${classes.control} ${enteredPostalCodeIsValid ? \"\" : classes.invalid}`}>\r\n        <label value=\"Name\">Postal Code</label>\r\n\r\n        <input\r\n          placeholder=\"Postal Code\"\r\n          type=\"text\"\r\n          id=\"Postal Code\"\r\n          value={enteredPostalCodeValue}\r\n          onChange={enteredPostalCodeChangeHandler}\r\n          onBlur={enteredPostalCodeInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${classes.control} ${enteredCityIsValid ? \"\" : classes.invalid}`}>\r\n        <label value=\"Name\">City</label>\r\n\r\n        <input\r\n          placeholder=\"City\"\r\n          type=\"text\"\r\n          id=\"City\"\r\n          value={enteredCityValue}\r\n          onChange={enteredCityChangeHandler}\r\n          onBlur={enteredCityInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onClose}>\r\n          {\" \"}\r\n          Cancel\r\n        </button>\r\n        {formValid && <button className={classes.submit} onClick={confirmationHandler} >Confirm </button>}\r\n      </div>\r\n\r\n      <div className={classes.invalid}>\r\n        {nameInputError && <label> Cannot be empty </label>}\r\n      </div>\r\n      <div className={classes.invalid}>\r\n        {emailInputError && <label> Does not include \"@\" </label>}\r\n      </div>\r\n      <div className={classes.invalid}>\r\n        {enteredPostalCodeInputError && (\r\n          <label> Has to be a number over 1 and under 6 </label>\r\n        )}\r\n      </div>\r\n      <div className={classes.invalid}>\r\n        {enteredCityInputError && <label> Can't be empty </label>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n"]},"metadata":{},"sourceType":"module"}