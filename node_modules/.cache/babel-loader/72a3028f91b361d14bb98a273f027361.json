{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal/Modal\";\nimport CartContext from \"../../contextStore/CartContext\";\nimport CartItem from \"./CartItem/CartItem\";\nimport OrderForm from \"../UI/Forms/OrderForm\";\nimport OrderContext from \"../../contextStore/OrderContext\";\nimport modalsClasses from \"../UI/Forms/Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const orderCTX = useContext(OrderContext);\n  const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0; // const hasOrderItems = orderCTX.items.length > 0\n\n  const [success, setSuccess] = useState(false);\n  const [valid, setValid] = useState(false);\n  console.log(\"orderCTX\", orderCTX);\n\n  const requestConfig = order => {\n    return {\n      method: \"POST\",\n      headers: {},\n      body: JSON.stringify(order)\n    };\n  };\n\n  const sendOrderInfo = async order => {\n    try {\n      const res = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/order.json\", requestConfig(order));\n\n      if (!res.ok) {\n        throw new Error(\"Request Failed\");\n      } // const data = await res.json()\n\n\n      setSuccess(true);\n    } catch (error) {\n      setSuccess(false);\n    }\n  };\n\n  const orderInfoHandler = obj => {\n    orderCTX.createOrder({\n      name: obj.name,\n      email: obj.email,\n      city: obj.city,\n      postalCode: obj.postalCode,\n      items: cartCTX.items,\n      totalAmount: cartCTX.totalAmount\n    });\n    console.log(\"orderCTX.order\", orderCTX.order);\n  };\n\n  const orderCartItems = () => {\n    sendOrderInfo(orderCTX.order);\n  };\n\n  const validityChecker = value => {\n    setValid(value);\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[`cart-items`],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(Modal, {\n      children: \" Success \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onHideCart,\n      children: [cartItems, hasItems && /*#__PURE__*/_jsxDEV(OrderForm, {\n        onClose: props.onHideCart,\n        valid: validityChecker,\n        orderHandler: orderInfoHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[`button--alt`],\n          onClick: props.onHideCart,\n          children: [\" \", \"Close\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), hasItems && valid && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          onClick: orderCartItems,\n          children: [\" \", \"Order\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cart, \"x3ROUloLFOtqeXANf5s1tdA5Cj8=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","classes","Modal","CartContext","CartItem","OrderForm","OrderContext","modalsClasses","Cart","props","cartCTX","orderCTX","totalAmount","toFixed","hasItems","items","length","success","setSuccess","valid","setValid","console","log","requestConfig","order","method","headers","body","JSON","stringify","sendOrderInfo","res","fetch","ok","Error","error","orderInfoHandler","obj","createOrder","name","email","city","postalCode","orderCartItems","validityChecker","value","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","price","bind","onHideCart","total","actions","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport CartContext from \"../../contextStore/CartContext\";\r\nimport CartItem from \"./CartItem/CartItem\";\r\nimport OrderForm from \"../UI/Forms/OrderForm\";\r\nimport OrderContext from \"../../contextStore/OrderContext\";\r\nimport modalsClasses from \"../UI/Forms/Modal.css\"\r\n\r\nconst Cart = (props) => {\r\n  const cartCTX = useContext(CartContext);\r\n  const orderCTX = useContext(OrderContext);\r\n\r\n  const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCTX.items.length > 0;\r\n  // const hasOrderItems = orderCTX.items.length > 0\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [valid, setValid] = useState(false);\r\n\r\n  console.log(\"orderCTX\", orderCTX)   \r\n\r\n  const requestConfig = (order) => {\r\n    return {\r\n      method: \"POST\",\r\n      headers: {},\r\n      body: JSON.stringify(order),\r\n    };\r\n  };\r\n\r\n  const sendOrderInfo = async (order) => {\r\n    try {\r\n      const res = await fetch(\r\n        \"https://food-app-a635f-default-rtdb.firebaseio.com/order.json\",\r\n        requestConfig(order)\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"Request Failed\");\r\n      }\r\n      // const data = await res.json()\r\n      setSuccess(true);\r\n    } catch (error) {\r\n      setSuccess(false);\r\n    }\r\n  };\r\n\r\n  const orderInfoHandler = (obj) => {\r\n    orderCTX.createOrder({\r\n      name: obj.name,\r\n      email: obj.email,\r\n      city: obj.city,\r\n      postalCode: obj.postalCode,\r\n      items: cartCTX.items,\r\n      totalAmount: cartCTX.totalAmount,\r\n    });\r\n   console.log(\"orderCTX.order\",  orderCTX.order)\r\n  };\r\n\r\n  const orderCartItems = () => {\r\n    sendOrderInfo(orderCTX.order);\r\n  };\r\n\r\n  const validityChecker = (value) => {\r\n    setValid(value);\r\n  };\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCTX.removeItem(id);\r\n  };\r\n  const cartItemAddHandler = (item) => {\r\n    cartCTX.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[`cart-items`]}>\r\n      {cartCTX.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          price={item.price}\r\n          amount={item.amount}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <Modal> Success </Modal>\r\n      ) : (\r\n        <Modal onClose={props.onHideCart}>\r\n          {cartItems}\r\n\r\n          {hasItems && (\r\n            <OrderForm\r\n            onClose={props.onHideCart}\r\n              valid={validityChecker}\r\n              orderHandler={orderInfoHandler}\r\n            />\r\n          )}\r\n\r\n          <div className={classes.total}>\r\n            <span>Total Amount</span>\r\n            <span>{totalAmount}</span>\r\n          </div>\r\n\r\n          <div className={classes.actions}>\r\n            <button\r\n              className={classes[`button--alt`]}\r\n              onClick={props.onHideCart}\r\n            >\r\n              {\" \"}\r\n              Close\r\n            </button>\r\n            {hasItems && valid && (\r\n              <button className={classes.button} onClick={orderCartItems}>\r\n                {\" \"}\r\n                Order\r\n              </button>\r\n            )}\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}