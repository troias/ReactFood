{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal/Modal';\nimport CartContext from '../../contextStore/CartContext';\nimport CartItem from './CartItem/CartItem';\nimport OrderForm from '../UI/Forms/OrderForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0;\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [cartValid, setCartValid] = useState(false);\n  const [inputInvalid, setInputInvalid] = useState(false);\n  console.log(inputInvalid);\n  let errMsg;\n\n  const orderCartItems = event => {\n    if (!cartValid) {\n      errMsg = inputInvalid;\n    }\n  };\n\n  const inputErrorHandler = value => {\n    setInputInvalid(value);\n  };\n\n  const validityChecker = value => {\n    setCartValid(value);\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id); // const existingItemIndex = cartCTX.items.findIndex(\n    //     (item) => item.id === id\n    //   );\n    //   const existingItem = cartCTX.items[existingItemIndex];\n    // console.log(\"existingItem\", existingItem)\n    // console.log(cartCTX)\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[`cart-items`],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCart,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[`button--alt`],\n        onClick: props.onHideCart,\n        children: \" Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), hasItems && cartValid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderCartItems,\n        children: \" Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(OrderForm, {\n      valid: validityChecker,\n      order: \"\",\n      inputErr: inputErrorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }, this), errMsg]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"WjOnYsK6h0HaFDw+yMwbr0C70pA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","classes","Modal","CartContext","CartItem","OrderForm","Cart","props","cartCTX","totalAmount","toFixed","hasItems","items","length","showOrderForm","setShowOrderForm","cartValid","setCartValid","inputInvalid","setInputInvalid","console","log","errMsg","orderCartItems","event","inputErrorHandler","value","validityChecker","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","name","price","bind","onHideCart","total","actions","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport classes from './Cart.module.css'\r\nimport Modal from '../UI/Modal/Modal'\r\nimport CartContext from '../../contextStore/CartContext'\r\nimport CartItem from './CartItem/CartItem'\r\nimport OrderForm from '../UI/Forms/OrderForm'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cartCTX = useContext(CartContext)\r\n\r\n    const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCTX.items.length > 0;\r\n    const [showOrderForm, setShowOrderForm] = useState(false)\r\n    const [cartValid, setCartValid] = useState(false)\r\n    const [inputInvalid, setInputInvalid] = useState(false)\r\n\r\n    console.log(inputInvalid)\r\n\r\n    let  errMsg\r\n    const orderCartItems = (event) => {\r\n        if(!cartValid) {\r\n            errMsg = inputInvalid\r\n        }\r\n\r\n    }\r\n\r\n    const inputErrorHandler = (value) => {\r\n        setInputInvalid(value)\r\n    }\r\n    const validityChecker = (value) => {\r\n        setCartValid(value)\r\n    }\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCTX.removeItem(id)\r\n        // const existingItemIndex = cartCTX.items.findIndex(\r\n        //     (item) => item.id === id\r\n        //   );\r\n\r\n        //   const existingItem = cartCTX.items[existingItemIndex];\r\n        // console.log(\"existingItem\", existingItem)\r\n        // console.log(cartCTX)\r\n    }\r\n\r\n    const cartItemAddHandler = (item) => {\r\n        cartCTX.addItem({ ...item, amount: 1 })\r\n    }\r\n\r\n    const cartItems = <ul className={classes[`cart-items`]}>\r\n        {cartCTX.items.map(item => <CartItem\r\n            key={item.id}\r\n            name={item.name}\r\n            price={item.price}\r\n            amount={item.amount}\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartItemAddHandler.bind(null, item)} />)}\r\n    </ul>\r\n\r\n\r\n    return (\r\n        <Modal onClose={props.onHideCart}>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button className={classes[`button--alt`]} onClick={props.onHideCart}> Close</button>\r\n                {hasItems && cartValid && <button\r\n                    className={classes.button}\r\n                    onClick={orderCartItems}> Order</button>}\r\n            </div>\r\n            \r\n            {hasItems && <OrderForm\r\n                valid={validityChecker}\r\n                order={\"\"}\r\n                inputErr={inputErrorHandler} />}\r\n           \r\n            {errMsg}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n"]},"metadata":{},"sourceType":"module"}