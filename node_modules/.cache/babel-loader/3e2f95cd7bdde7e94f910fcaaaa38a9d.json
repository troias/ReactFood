{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Meals/MealList/MealsList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport Meals from \"../MealItem/Meals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intialReducerObj = {\n  meals: {},\n  loading: false,\n  error: false,\n  loaded: false\n};\n\nconst mealsReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state,\n        loading: action.payload\n      };\n\n    case \"SET-MEALS\":\n      return { ...state,\n        meals: action.payload\n      };\n\n    case \"ERROR\":\n      return { ...state,\n        error: action.payload\n      };\n\n    case \"LOADED\":\n      return { ...state,\n        loaded: action.payload\n      };\n\n    default:\n      return intialReducerObj;\n  }\n};\n\nconst MealsList = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(mealsReducer, intialReducerObj);\n  useEffect(() => {\n    const getIntialMeals = async () => {\n      try {\n        dispatch({\n          type: \"LOADING\",\n          payload: true\n        });\n        const req = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/meals.json\");\n\n        if (!req.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const res = await req.json();\n        let loadedMeals = [];\n\n        for (const key in res) {\n          loadedMeals.push({\n            id: key,\n            name: res[key].name,\n            price: res[key].price,\n            description: res[key].description\n          });\n          console.log(loadedMeals);\n          dispatch({\n            type: \"SET-MEALS\",\n            payload: loadedMeals\n          });\n        }\n\n        dispatch({\n          type: \"LOADED\",\n          payload: true\n        });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          payload: error.message\n        });\n      }\n\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n    };\n\n    getIntialMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }, this), state.error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", state.error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, this), state.loaded && state.meals.map(meals => {\n      return /*#__PURE__*/_jsxDEV(Meals, {\n        props: meals\n      }, meals.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealsList, \"ER0ZlCqzMenjnhgobRjqh7Oxxjg=\");\n\n_c = MealsList;\nexport default MealsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealsList\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Meals/MealList/MealsList.js"],"names":["useEffect","useReducer","Meals","intialReducerObj","meals","loading","error","loaded","mealsReducer","state","action","type","payload","MealsList","dispatch","getIntialMeals","req","fetch","ok","Error","res","json","loadedMeals","key","push","id","name","price","description","console","log","message","map"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from \"react\";\r\nimport Meals from \"../MealItem/Meals\";\r\n\r\n\r\nconst intialReducerObj = {\r\n  meals: {},\r\n  loading: false,\r\n  error: false,\r\n  loaded: false,\r\n};\r\n\r\nconst mealsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case \"SET-MEALS\":\r\n      return {\r\n        ...state,\r\n        meals: action.payload,\r\n      };\r\n\r\n    case \"ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case \"LOADED\":\r\n      return {\r\n        ...state,\r\n        loaded: action.payload,\r\n      };\r\n    default:\r\n      return intialReducerObj;\r\n  }\r\n};\r\nconst MealsList = () => {\r\n  const [state, dispatch] = useReducer(mealsReducer, intialReducerObj);\r\n\r\n  useEffect(() => {\r\n    const getIntialMeals = async () => {\r\n      try {\r\n        dispatch({\r\n          type: \"LOADING\",\r\n          payload: true,\r\n        });\r\n\r\n        const req = await fetch(\r\n          \"https://food-app-a635f-default-rtdb.firebaseio.com/meals.json\"\r\n        );\r\n\r\n        if (!req.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n\r\n        const res = await req.json();\r\n\r\n        let loadedMeals = [];\r\n\r\n        for (const key in res) {\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: res[key].name,\r\n            price: res[key].price,\r\n            description: res[key].description,\r\n          });\r\n\r\n          console.log(loadedMeals);\r\n\r\n          dispatch({\r\n            type: \"SET-MEALS\",\r\n            payload: loadedMeals,\r\n          });\r\n        }\r\n        dispatch({\r\n          type: \"LOADED\",\r\n          payload: true,\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          payload: error.message,\r\n        });\r\n      }\r\n      dispatch({\r\n        type: \"LOADING\",\r\n        payload: false,\r\n      });\r\n    };\r\n\r\n    getIntialMeals();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {state.loading && <p>Loading...</p>}\r\n      {state.error && <p> {state.error.message} </p>}\r\n      {state.loaded &&\r\n        state.meals.map((meals) => {\r\n          return <Meals key={meals.id} props={meals} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealsList;\r\n"]},"metadata":{},"sourceType":"module"}