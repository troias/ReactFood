{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal/Modal';\nimport CartContext from '../../contextStore/CartContext';\nimport CartItem from './CartItem/CartItem';\nimport OrderForm from '../UI/Forms/OrderForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0;\n  const [orderInfo, setOrderInfo] = useState({});\n  const [order, setOrder] = useState({});\n  const [success, setSuccess] = useState(false);\n  const [valid, setValid] = useState(false);\n\n  const requestConfig = order => {\n    return {\n      method: \"POST\",\n      headers: {},\n      body: JSON.stringify(order)\n    };\n  };\n\n  const sendOrderInfo = async order => {\n    try {\n      const res = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/order.json\", requestConfig(order));\n\n      if (!res.ok) {\n        throw new Error(\"Request Failed\");\n      } // const data = await res.json()\n\n\n      setSuccess(true);\n    } catch (error) {\n      setSuccess(false);\n    }\n  };\n\n  const nameHander = obj => {\n    console.log(obj);\n    setOrderInfo(obj);\n  };\n\n  useEffect(() => {\n    if (valid) {\n      orderFull();\n    }\n  }, [cartCTX.items, cartCTX.totalAmount, orderInfo]);\n\n  const orderFull = () => {\n    const {\n      name,\n      email,\n      city,\n      postalCode\n    } = orderInfo;\n    const order = {\n      name,\n      email,\n      city,\n      postalCode,\n      items: cartCTX.items,\n      totalAmount: cartCTX.totalAmount\n    };\n    orderCartItems(order);\n  };\n\n  const orderCartItems = obj => {\n    sendOrderInfo(obj);\n  };\n\n  const validityChecker = value => {\n    setValid(value);\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[`cart-items`],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 23\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(Modal, {\n      children: \" Success \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onHideCart,\n      children: [cartItems, hasItems && /*#__PURE__*/_jsxDEV(OrderForm, {\n        valid: validityChecker,\n        name: nameHander\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[`button--alt`],\n          onClick: props.onHideCart,\n          children: \" Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), hasItems && valid && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          onClick: orderCartItems,\n          children: \" Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 51\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cart, \"H1rsX6sO1M94vQIhXI51wiKeChs=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","useEffect","useRef","classes","Modal","CartContext","CartItem","OrderForm","Cart","props","cartCTX","totalAmount","toFixed","hasItems","items","length","orderInfo","setOrderInfo","order","setOrder","success","setSuccess","valid","setValid","requestConfig","method","headers","body","JSON","stringify","sendOrderInfo","res","fetch","ok","Error","error","nameHander","obj","console","log","orderFull","name","email","city","postalCode","orderCartItems","validityChecker","value","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","price","bind","onHideCart","total","actions","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport classes from './Cart.module.css'\r\nimport Modal from '../UI/Modal/Modal'\r\nimport CartContext from '../../contextStore/CartContext'\r\nimport CartItem from './CartItem/CartItem'\r\nimport OrderForm from '../UI/Forms/OrderForm'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cartCTX = useContext(CartContext)\r\n    const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCTX.items.length > 0;\r\n\r\n    const [orderInfo, setOrderInfo] = useState({})\r\n    const [order, setOrder] = useState({})\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const [valid, setValid] = useState(false)\r\n\r\n\r\n\r\n    const requestConfig = (order) => {\r\n        return {\r\n            method: \"POST\",\r\n            headers: {},\r\n            body: JSON.stringify(order)\r\n        }\r\n\r\n    }\r\n\r\n    const sendOrderInfo = async (order) => {\r\n        try {\r\n            const res = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/order.json\", requestConfig(order))\r\n\r\n            if (!res.ok) {\r\n                throw new Error(\"Request Failed\")\r\n            }\r\n            // const data = await res.json()\r\n            setSuccess(true)\r\n\r\n        } catch (error) {\r\n            setSuccess(false)\r\n        }\r\n    }\r\n\r\n    const nameHander =(obj) => {\r\n\r\n        console.log(obj)\r\n        setOrderInfo(obj)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (valid) {\r\n            orderFull()\r\n        }\r\n\r\n    }, [cartCTX.items, cartCTX.totalAmount, orderInfo])\r\n\r\n    const orderFull = () => { \r\n        const { name, email, city, postalCode} = orderInfo\r\n\r\n        const order = {\r\n            name,\r\n            email,\r\n            city,\r\n            postalCode,\r\n            items: cartCTX.items,\r\n            totalAmount: cartCTX.totalAmount\r\n        }\r\n        orderCartItems(order)\r\n    }\r\n    const orderCartItems = (obj) => {\r\n      \r\n    \r\n        sendOrderInfo(obj)\r\n    }\r\n\r\n\r\n\r\n    const validityChecker = (value) => {\r\n\r\n        setValid(value)\r\n\r\n\r\n    }\r\n\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCTX.removeItem(id)\r\n\r\n    }\r\n    const cartItemAddHandler = (item) => {\r\n        cartCTX.addItem({ ...item, amount: 1 })\r\n    }\r\n\r\n    const cartItems = <ul className={classes[`cart-items`]}>\r\n        {cartCTX.items.map(item => <CartItem\r\n            key={item.id}\r\n            name={item.name}\r\n            price={item.price}\r\n            amount={item.amount}\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartItemAddHandler.bind(null, item)} />)}\r\n    </ul>\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            {success ? <Modal> Success </Modal> : <Modal onClose={props.onHideCart}>\r\n                {cartItems}\r\n\r\n                {hasItems && <OrderForm\r\n                    valid={validityChecker}\r\n                    name={nameHander}\r\n                />}\r\n\r\n\r\n                <div className={classes.total}>\r\n                    <span>Total Amount</span>\r\n                    <span>{totalAmount}</span>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    <button className={classes[`button--alt`]} onClick={props.onHideCart}> Close</button>\r\n                    {hasItems && valid && <button\r\n                        className={classes.button}\r\n                        onClick={orderCartItems}> Order</button>}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </Modal>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n"]},"metadata":{},"sourceType":"module"}