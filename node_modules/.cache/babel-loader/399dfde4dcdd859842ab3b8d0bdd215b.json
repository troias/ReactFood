{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst defaultObj = {\n  enteredValue: \"\",\n  hasError: false,\n  touched: false,\n  valueIsValid: false\n};\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"VALUE_CHANGED\":\n      return { ...state,\n        enteredValue: action.payload\n      };\n\n    case \"INPUT_BLUR\":\n      return { ...state,\n        touched: true\n      };\n\n    case \"RESET\":\n      return { ...state,\n        touched: false,\n        enteredValue: \"\"\n      };\n\n    default:\n      break;\n  }\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [state, dispatch] = useReducer(inputReducer, defaultObj);\n  state.valueIsValid = validateValue(state.enteredValue);\n  state.hasError = !state.valueIsValid && state.touched;\n  console.log(state.touched);\n\n  const inputBlurHandler = () => {\n    dispatch({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  const valueChangedHandler = event => {\n    dispatch({\n      type: \"VALUE_CHANGED\",\n      payload: event.target.value\n    });\n  };\n\n  return {\n    value: state.enteredValue,\n    hasError: state.hasError,\n    isValid: state.valueIsValid,\n    inputBlurHandler,\n    valueChangedHandler,\n    reset\n  };\n};\n\n_s(useInput, \"ZmxpMflbhmW1PanfgbNgBqfDnKo=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/customHooks/useInput.js"],"names":["useReducer","defaultObj","enteredValue","hasError","touched","valueIsValid","inputReducer","state","action","type","payload","useInput","validateValue","dispatch","console","log","inputBlurHandler","reset","valueChangedHandler","event","target","value","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,YAAY,EAAE,EADC;AAEfC,EAAAA,QAAQ,EAAE,KAFK;AAGfC,EAAAA,OAAO,EAAE,KAHM;AAIfC,EAAAA,YAAY,EAAE;AAJC,CAAnB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAFlB,OAAP;;AAIJ,SAAK,YAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHF,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAMJ;AACI;AAnBR;AAqBH,CAtBD;;AA0BC,MAAMS,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AACjC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,YAAD,EAAeL,UAAf,CAApC;AAEAM,EAAAA,KAAK,CAACF,YAAN,GAAqBO,aAAa,CAACL,KAAK,CAACL,YAAP,CAAlC;AACAK,EAAAA,KAAK,CAACJ,QAAN,GAAiB,CAACI,KAAK,CAACF,YAAP,IAAuBE,KAAK,CAACH,OAA9C;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACH,OAAlB;;AACA,QAAMY,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GAJD;;AAKA,QAAMQ,KAAK,GAAG,MAAM;AAChBJ,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMS,mBAAmB,GAAIC,KAAD,IAAW;AACnCN,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,eADD;AAELC,MAAAA,OAAO,EAAES,KAAK,CAACC,MAAN,CAAaC;AAFjB,KAAD,CAAR;AAIH,GALD;;AAOA,SAAO;AACHA,IAAAA,KAAK,EAAEd,KAAK,CAACL,YADV;AAEHC,IAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAFb;AAGHmB,IAAAA,OAAO,EAAEf,KAAK,CAACF,YAHZ;AAIHW,IAAAA,gBAJG;AAKHE,IAAAA,mBALG;AAMHD,IAAAA;AANG,GAAP;AAQH,CAjCA;;GAAMN,Q;;AAmCP,eAAeA,QAAf","sourcesContent":["import { useReducer } from 'react'\r\n\r\nconst defaultObj = {\r\n    enteredValue: \"\",\r\n    hasError: false,\r\n    touched: false,\r\n    valueIsValid: false,\r\n}\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"VALUE_CHANGED\":\r\n            return {\r\n                ...state, \r\n                enteredValue: action.payload\r\n            }\r\n        case \"INPUT_BLUR\":\r\n            return {\r\n                ...state, \r\n                touched: true\r\n            }\r\n        case \"RESET\":\r\n            return {\r\n                ...state, \r\n                touched: false, \r\n                enteredValue: \"\"\r\n            }\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n\r\n const useInput = (validateValue) => {\r\n    const [state, dispatch] = useReducer(inputReducer, defaultObj)\r\n   \r\n    state.valueIsValid = validateValue(state.enteredValue)\r\n    state.hasError = !state.valueIsValid && state.touched\r\n\r\n    console.log(state.touched)\r\n    const inputBlurHandler = () => {\r\n        dispatch({\r\n            type: \"INPUT_BLUR\"\r\n        })\r\n    }\r\n    const reset = () => {\r\n        dispatch({\r\n            type: \"RESET\"\r\n         })\r\n    }\r\n    \r\n    const valueChangedHandler = (event) => {\r\n        dispatch({ \r\n            type: \"VALUE_CHANGED\", \r\n            payload: event.target.value\r\n        })\r\n    }\r\n  \r\n    return {\r\n        value: state.enteredValue,\r\n        hasError: state.hasError,\r\n        isValid: state.valueIsValid, \r\n        inputBlurHandler,\r\n        valueChangedHandler,\r\n        reset, \r\n    }\r\n}\r\n\r\nexport default useInput"]},"metadata":{},"sourceType":"module"}