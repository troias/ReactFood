{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/contextStore/OrderProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport OrderContext from \"./OrderContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultOrderState = {\n  order: {\n    name: \"\",\n    email: \" \",\n    city: \"\",\n    postalCode: 1,\n    items: [],\n    totalAmount: 0\n  }\n};\n\nconst orderReducer = (state, action) => {\n  switch (action.type) {\n    case \"CREATE_ORDER\":\n      return {\n        order: action.payload\n      };\n\n    default:\n  }\n};\n\nconst OrderProvider = props => {\n  _s();\n\n  const [orderState, dispOrderAction] = useReducer(orderReducer, defaultOrderState);\n\n  const createOrder = order => {\n    dispOrderAction({\n      type: \"CREATE_ORDER\",\n      payload: order\n    });\n  };\n\n  const orderContext = {\n    order: {\n      name: orderState.name,\n      email: orderState.email,\n      city: orderState.city,\n      postalCode: orderState.postalCode,\n      items: orderState.items,\n      totalAmount: orderState.totalAmount\n    },\n    createOrder: createOrder\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: orderContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderProvider, \"KSsxrvVExYk34IoMN91usionaxE=\");\n\n_c = OrderProvider;\nexport default OrderProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/contextStore/OrderProvider.js"],"names":["React","useReducer","OrderContext","defaultOrderState","order","name","email","city","postalCode","items","totalAmount","orderReducer","state","action","type","payload","OrderProvider","props","orderState","dispOrderAction","createOrder","orderContext","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,IAAI,EAAE,EAHD;AAILC,IAAAA,UAAU,EAAE,CAJP;AAKLC,IAAAA,KAAK,EAAE,EALF;AAMLC,IAAAA,WAAW,EAAE;AANR;AADiB,CAA1B;;AAWA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO;AAAEV,QAAAA,KAAK,EAAES,MAAM,CAACE;AAAhB,OAAP;;AAEF;AAJF;AAMD,CAPD;;AASA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgClB,UAAU,CAC9CU,YAD8C,EAE9CR,iBAF8C,CAAhD;;AAKA,QAAMiB,WAAW,GAAIhB,KAAD,IAAW;AAC7Be,IAAAA,eAAe,CAAC;AACdL,MAAAA,IAAI,EAAE,cADQ;AAEdC,MAAAA,OAAO,EAAEX;AAFK,KAAD,CAAf;AAID,GALD;;AAOA,QAAMiB,YAAY,GAAG;AACnBjB,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEa,UAAU,CAACb,IADZ;AAELC,MAAAA,KAAK,EAAEY,UAAU,CAACZ,KAFb;AAGLC,MAAAA,IAAI,EAAEW,UAAU,CAACX,IAHZ;AAILC,MAAAA,UAAU,EAAEU,UAAU,CAACV,UAJlB;AAKLC,MAAAA,KAAK,EAAES,UAAU,CAACT,KALb;AAMLC,MAAAA,WAAW,EAAEQ,UAAU,CAACR;AANnB,KADY;AAUnBU,IAAAA,WAAW,EAAEA;AAVM,GAArB;AAYA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,YAA9B;AAAA,cACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BD;;GAAMN,a;;KAAAA,a;AAgCN,eAAeA,aAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport OrderContext from \"./OrderContext\";\r\n\r\nconst defaultOrderState = {\r\n  order: {\r\n    name: \"\",\r\n    email: \" \",\r\n    city: \"\",\r\n    postalCode: 1,\r\n    items: [],\r\n    totalAmount: 0,\r\n  },\r\n};\r\n\r\nconst orderReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_ORDER\":\r\n      return { order: action.payload };\r\n\r\n    default:\r\n  }\r\n};\r\n\r\nconst OrderProvider = (props) => {\r\n  const [orderState, dispOrderAction] = useReducer(\r\n    orderReducer,\r\n    defaultOrderState\r\n  );\r\n\r\n  const createOrder = (order) => {\r\n    dispOrderAction({\r\n      type: \"CREATE_ORDER\",\r\n      payload: order,\r\n    });\r\n  };\r\n\r\n  const orderContext = {\r\n    order: {\r\n      name: orderState.name,\r\n      email: orderState.email,\r\n      city: orderState.city,\r\n      postalCode: orderState.postalCode,\r\n      items: orderState.items,\r\n      totalAmount: orderState.totalAmount,\r\n    },\r\n\r\n    createOrder: createOrder,\r\n  };\r\n  return (\r\n    <OrderContext.Provider value={orderContext}>\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderProvider;\r\n"]},"metadata":{},"sourceType":"module"}