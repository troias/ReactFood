{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal/Modal';\nimport CartContext from '../../contextStore/CartContext';\nimport CartItem from './CartItem/CartItem';\nimport OrderForm from '../UI/Forms/OrderForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0;\n  let valid = false;\n\n  const orderCartItems = event => {};\n\n  const validityChecker = value => {\n    console.log(value); //    if (value) {\n    //     valid = true\n    //    }\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[`cart-items`],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCart,\n    children: [cartItems, hasItems && /*#__PURE__*/_jsxDEV(OrderForm, {\n      valid: validityChecker,\n      inputErr: inputErrorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), console.log(valid), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[`button--alt`],\n        onClick: props.onHideCart,\n        children: \" Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), hasItems && valid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderCartItems,\n        children: \" Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"zNqVLZ+3s3J3Hirs4q3q2OQjRqM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","useEffect","classes","Modal","CartContext","CartItem","OrderForm","Cart","props","cartCTX","totalAmount","toFixed","hasItems","items","length","valid","orderCartItems","event","validityChecker","value","console","log","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","name","price","bind","onHideCart","inputErrorHandler","total","actions","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport classes from './Cart.module.css'\r\nimport Modal from '../UI/Modal/Modal'\r\nimport CartContext from '../../contextStore/CartContext'\r\nimport CartItem from './CartItem/CartItem'\r\nimport OrderForm from '../UI/Forms/OrderForm'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cartCTX = useContext(CartContext)\r\n\r\n    const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCTX.items.length > 0;\r\n\r\n \r\n    let valid = false \r\n\r\n    const orderCartItems = (event) => {\r\n      \r\n\r\n    }\r\n\r\n\r\n\r\n    const validityChecker = (value) => {\r\n       console.log(value)\r\n    //    if (value) {\r\n    //     valid = true\r\n    //    }\r\n       \r\n\r\n    }\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCTX.removeItem(id)\r\n\r\n    }\r\n    const cartItemAddHandler = (item) => {\r\n        cartCTX.addItem({ ...item, amount: 1 })\r\n    }\r\n\r\n    const cartItems = <ul className={classes[`cart-items`]}>\r\n        {cartCTX.items.map(item => <CartItem\r\n            key={item.id}\r\n            name={item.name}\r\n            price={item.price}\r\n            amount={item.amount}\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartItemAddHandler.bind(null, item)} />)}\r\n    </ul>\r\n\r\n\r\n    return (\r\n        <Modal onClose={props.onHideCart}>\r\n            {cartItems}\r\n\r\n            {hasItems && <OrderForm\r\n                valid={validityChecker}\r\n                inputErr={inputErrorHandler} />}\r\n           \r\n\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {console.log(valid)}\r\n            <div className={classes.actions}>\r\n                <button className={classes[`button--alt`]} onClick={props.onHideCart}> Close</button>\r\n                {hasItems && valid && <button\r\n                    className={classes.button}\r\n                    onClick={orderCartItems}> Order</button>}\r\n\r\n          \r\n            </div>\r\n            \r\n          \r\n         \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n"]},"metadata":{},"sourceType":"module"}