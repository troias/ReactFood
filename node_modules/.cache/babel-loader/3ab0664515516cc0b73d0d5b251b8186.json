{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useInput from '../../../customHooks/useInput';\nimport { emailValidator, nameInputValidator, postalCodeInputValidator, cityInputValidator } from \"../../../UtilityFunctions/inputValidationFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = props => {\n  _s();\n\n  const {\n    value: enteredNameValue,\n    hasError: nameInputError,\n    valueChangedHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: valueIsValid,\n    reset: resetInput\n  } = useInput(nameInputValidator);\n  const {\n    value: enteredEmailValue,\n    hasError: emailInputError,\n    valueChangedHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailIsValid,\n    reset: resetEmail\n  } = useInput(emailValidator);\n  const {\n    value: enteredPostalCodeValue,\n    hasError: enteredPostalCodeInputError,\n    valueChangedHandler: enteredPostalCodeChangeHandler,\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\n    isValid: enteredPostalCodeIsValid,\n    reset: enteredPostalCodeEmail\n  } = useInput(postalCodeInputValidator);\n  const {\n    value: enteredCityValue,\n    hasError: enteredCityInputError,\n    valueChangedHandler: enteredCityChangeHandler,\n    inputBlurHandler: enteredCityInputBlurHandler,\n    isValid: enteredCityIsValid,\n    reset: enteredCityEmail\n  } = useInput(cityInputValidator);\n  useEffect(() => {\n    if (valueIsValid && emailIsValid && enteredCityIsValid && enteredPostalCodeIsValid) {\n      props.valid(true);\n      props.name({\n        name: enteredNameValue,\n        email: enteredEmailValue,\n        postalCode: enteredPostalCodeValue,\n        city: enteredCityValue\n      });\n    }\n  }, [valueIsValid, emailIsValid]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \" Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      type: \"text\",\n      id: \"name\",\n      value: enteredNameValue,\n      onChange: nameChangeHandler,\n      onBlur: nameInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      id: \"email\",\n      value: enteredEmailValue,\n      onChange: emailChangeHandler,\n      onBlur: emailInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"Postal Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Postal Code\",\n      type: \"text\",\n      id: \"Postal Code\",\n      value: enteredPostalCodeValue,\n      onChange: enteredPostalCodeChangeHandler,\n      onBlur: enteredPostalCodeInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"City\",\n      type: \"text\",\n      id: \"City\",\n      value: enteredCityValue,\n      enteredCityChangeHandler: true,\n      onChange: enteredCityChangeHandler,\n      onBlur: enteredCityInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Cannot be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Does not include \\\"@\\\" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }, this), enteredPostalCodeInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Has to be a number over 1 and under 6 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Can't be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderForm, \"MHXIhHcAjcL5tKWp6P3Wh84UtWk=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js"],"names":["React","useEffect","useInput","emailValidator","nameInputValidator","postalCodeInputValidator","cityInputValidator","OrderForm","props","value","enteredNameValue","hasError","nameInputError","valueChangedHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","isValid","valueIsValid","reset","resetInput","enteredEmailValue","emailInputError","emailChangeHandler","emailInputBlurHandler","emailIsValid","resetEmail","enteredPostalCodeValue","enteredPostalCodeInputError","enteredPostalCodeChangeHandler","enteredPostalCodeInputBlurHandler","enteredPostalCodeIsValid","enteredPostalCodeEmail","enteredCityValue","enteredCityInputError","enteredCityChangeHandler","enteredCityInputBlurHandler","enteredCityIsValid","enteredCityEmail","valid","name","email","postalCode","city"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport useInput from '../../../customHooks/useInput'\r\nimport { emailValidator, nameInputValidator, postalCodeInputValidator, cityInputValidator  } from \"../../../UtilityFunctions/inputValidationFunctions\"\r\n\r\nconst OrderForm = (props) => {\r\n\r\n\r\n    const {\r\n        value: enteredNameValue,\r\n        hasError: nameInputError,\r\n        valueChangedHandler: nameChangeHandler,\r\n        inputBlurHandler: nameInputBlurHandler,\r\n        isValid: valueIsValid,\r\n        reset: resetInput\r\n    } = useInput(nameInputValidator)\r\n\r\n    const {\r\n        value: enteredEmailValue,\r\n        hasError: emailInputError,\r\n        valueChangedHandler: emailChangeHandler,\r\n        inputBlurHandler: emailInputBlurHandler,\r\n        isValid: emailIsValid,\r\n        reset: resetEmail\r\n    } = useInput(emailValidator)\r\n\r\n    const {\r\n        value: enteredPostalCodeValue,\r\n        hasError: enteredPostalCodeInputError,\r\n        valueChangedHandler: enteredPostalCodeChangeHandler,\r\n        inputBlurHandler: enteredPostalCodeInputBlurHandler,\r\n        isValid: enteredPostalCodeIsValid,\r\n        reset: enteredPostalCodeEmail\r\n    } = useInput(postalCodeInputValidator)\r\n\r\n    const {\r\n        value: enteredCityValue,\r\n        hasError: enteredCityInputError,\r\n        valueChangedHandler: enteredCityChangeHandler,\r\n        inputBlurHandler: enteredCityInputBlurHandler,\r\n        isValid: enteredCityIsValid,\r\n        reset: enteredCityEmail\r\n    } = useInput(cityInputValidator)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (valueIsValid && emailIsValid && enteredCityIsValid && enteredPostalCodeIsValid ) {\r\n            props.valid(true)\r\n            props.name({\r\n                name: enteredNameValue,\r\n                email: enteredEmailValue, \r\n                postalCode: enteredPostalCodeValue,\r\n                city: enteredCityValue,\r\n            })\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [valueIsValid, emailIsValid])\r\n\r\n\r\n    return (\r\n        <form>\r\n            <label value=\"Name\"> Name</label>\r\n            <br />\r\n            <input\r\n                placeholder=\"Name\"\r\n                type='text'\r\n                id='name'\r\n                value={enteredNameValue}\r\n                onChange={nameChangeHandler}\r\n                onBlur={nameInputBlurHandler}\r\n            />\r\n\r\n\r\n            <br />\r\n            <label value=\"Name\">Email</label>\r\n            <br />\r\n            <input\r\n                placeholder=\"Email\"\r\n                type='email'\r\n                id='email'\r\n                value={enteredEmailValue}\r\n                onChange={emailChangeHandler}\r\n                onBlur={emailInputBlurHandler} />\r\n            <br />\r\n            <label value=\"Name\">Postal Code</label>\r\n            <br />\r\n            <input\r\n                placeholder=\"Postal Code\"\r\n                type='text'\r\n                id='Postal Code'\r\n                value={enteredPostalCodeValue}\r\n                onChange={enteredPostalCodeChangeHandler}\r\n                onBlur={enteredPostalCodeInputBlurHandler} />\r\n            <br />\r\n            <label value=\"Name\">City</label>\r\n            <br />\r\n            <input\r\n                placeholder=\"City\"\r\n                type='text'\r\n                id='City'\r\n                value={enteredCityValue}\r\n                enteredCityChangeHandler\r\n                onChange={enteredCityChangeHandler}\r\n                onBlur={enteredCityInputBlurHandler} />\r\n\r\n            {nameInputError && <p className={\"error-text\"}> Cannot be empty </p>}\r\n            {emailInputError && <p className={\"error-text\"}> Does not include \"@\" </p>}\r\n            {enteredPostalCodeInputError && <p className={\"error-text\"}> Has to be a number over 1 and under 6 </p>}\r\n            {emailInputError && <p className={\"error-text\"}> Can't be empty </p>}\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default OrderForm\r\n"]},"metadata":{},"sourceType":"module"}