{"ast":null,"code":"import _slicedToArray from\"/home/troias/udemy/project-2/01-starting-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/troias/udemy/project-2/01-starting-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/troias/udemy/project-2/01-starting-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer}from\"react\";import CartContext from\"./CartContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){switch(action.type){case\"ADD_ITEM\":var newTotalAmount=state.totalAmount+action.payload.price*action.payload.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.payload.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItems;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.payload.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.payload);}return{items:updatedItems,totalAmount:newTotalAmount};case\"REMOVE_ITEM\":var existingItemIndex=state.items.findIndex(function(item){return item.id===action.payload;});var existingItem=state.items[existingItemIndex];var updatedTotalAmount=state.totalAmount-existingItem.price;var updatedCartItems;if(existingItem.amount===0){updatedCartItems=state.items.filter(function(item){return item.id!==action.payload;});}else{var _updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});updatedCartItems=_toConsumableArray(state.items);updatedCartItems[existingItemIndex]=_updatedItem;}if(updatedTotalAmount<0){return{items:[],totalAmount:0};}return{items:updatedCartItems,totalAmount:updatedTotalAmount};case\"CLEAR\":return defaultCartState;default:}};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispCartAction=_useReducer2[1];var addItem=function addItem(item){dispCartAction({type:\"ADD_ITEM\",payload:item});};var clearCart=function clearCart(){dispCartAction({type:\"CLEAR\"});};var removeItem=function removeItem(id){dispCartAction({type:\"REMOVE_ITEM\",payload:id});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItem,removeItem:removeItem,clearCart:clearCart};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","existingItemIndex","existingItem","updatedTotalAmount","updatedCartItems","filter","CartProvider","props","cartState","dispCartAction","addItem","clearCart","removeItem","cartContext","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./CartContext\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      const newTotalAmount =\r\n        state.totalAmount + action.payload.price * action.payload.amount;\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n      let updatedItems;\r\n\r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.payload.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.payload);\r\n      }\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: newTotalAmount,\r\n      };\r\n\r\n    case \"REMOVE_ITEM\":\r\n      const existingItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload\r\n      );\r\n      const existingItem = state.items[existingItemIndex];\r\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n      let updatedCartItems;\r\n      if (existingItem.amount === 0) {\r\n        updatedCartItems = state.items.filter(item => item.id !== action.payload) ;\r\n      } else {\r\n        const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n        updatedCartItems = [...state.items];\r\n        updatedCartItems[existingItemIndex] = updatedItem;\r\n      }\r\n      if (updatedTotalAmount < 0) {\r\n        return {\r\n          items: [],\r\n          totalAmount: 0,\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return {\r\n        items: updatedCartItems,\r\n        totalAmount: updatedTotalAmount\r\n      };\r\n\r\n    case \"CLEAR\":\r\n      return defaultCartState\r\n    default:\r\n  }\r\n\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItem = (item) => {\r\n    dispCartAction({\r\n      type: \"ADD_ITEM\",\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispCartAction({\r\n      type: \"CLEAR\",\r\n    });\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    dispCartAction({\r\n      type: \"REMOVE_ITEM\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItem,\r\n    removeItem: removeItem,\r\n    clearCart\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}