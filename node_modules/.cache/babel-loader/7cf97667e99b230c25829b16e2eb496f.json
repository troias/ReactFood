{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal/Modal';\nimport CartContext from '../../contextStore/CartContext';\nimport CartItem from './CartItem/CartItem';\nimport OrderForm from '../UI/Forms/OrderForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0;\n  const [success, setSuccess] = useState(\"\");\n  const [valid, setValid] = useState(false);\n\n  const requestConfig = order => {\n    return {\n      method: \"POST\",\n      headers: {},\n      body: JSON.stringify(order)\n    };\n  };\n\n  const sendOrderInfo = async order => {\n    try {\n      const res = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/order.json\", requestConfig(order));\n\n      if (!res.ok) {\n        throw new Error(\"Request Failed\");\n      }\n\n      const data = await res.json();\n      setSuccess(\"Success\");\n      console.log(success);\n    } catch (error) {}\n  };\n\n  const orderCartItems = name => {\n    const order = {\n      name: name.name,\n      email: name.email,\n      items: cartCTX.items,\n      totalAmount: cartCTX.totalAmount\n    };\n    sendOrderInfo(order);\n  };\n\n  const validityChecker = value => {\n    setValid(value);\n  };\n\n  console.log(valid);\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[`cart-items`],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCart,\n    children: [cartItems, hasItems && /*#__PURE__*/_jsxDEV(OrderForm, {\n      valid: validityChecker,\n      name: orderCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), console.log(valid), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[`button--alt`],\n        onClick: props.onHideCart,\n        children: \" Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), hasItems && valid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderCartItems,\n        children: \" Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"GdIS2cOwriv7YMYp13VHdwySB5A=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","useEffect","classes","Modal","CartContext","CartItem","OrderForm","Cart","props","cartCTX","totalAmount","toFixed","hasItems","items","length","success","setSuccess","valid","setValid","requestConfig","order","method","headers","body","JSON","stringify","sendOrderInfo","res","fetch","ok","Error","data","json","console","log","error","orderCartItems","name","email","validityChecker","value","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","price","bind","onHideCart","total","actions","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport classes from './Cart.module.css'\r\nimport Modal from '../UI/Modal/Modal'\r\nimport CartContext from '../../contextStore/CartContext'\r\nimport CartItem from './CartItem/CartItem'\r\nimport OrderForm from '../UI/Forms/OrderForm'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cartCTX = useContext(CartContext)\r\n\r\n    const totalAmount = `$${cartCTX.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCTX.items.length > 0;\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [valid, setValid] = useState(false)\r\n\r\n\r\n    const requestConfig = (order) => {\r\n        return {\r\n            method: \"POST\",\r\n            headers: {},\r\n            body: JSON.stringify(order)\r\n        }\r\n\r\n    }\r\n\r\n    const sendOrderInfo = async (order) => {\r\n        try {\r\n            const res = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/order.json\", requestConfig(order))\r\n\r\n            if (!res.ok) {\r\n                throw new Error(\"Request Failed\")\r\n            }\r\n            const data = await res.json()\r\n            setSuccess(\"Success\")\r\n            console.log(success)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\nconst orderCartItems = (name) => {\r\n\r\n    const order = {\r\n        name: name.name,\r\n        email: name.email,\r\n        items: cartCTX.items,\r\n        totalAmount: cartCTX.totalAmount\r\n    }\r\n\r\n    \r\n\r\n    sendOrderInfo(order)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst validityChecker = (value) => {\r\n\r\n    setValid(value)\r\n\r\n\r\n}\r\n\r\nconsole.log(valid)\r\nconst cartItemRemoveHandler = (id) => {\r\n    cartCTX.removeItem(id)\r\n\r\n}\r\nconst cartItemAddHandler = (item) => {\r\n    cartCTX.addItem({ ...item, amount: 1 })\r\n}\r\n\r\nconst cartItems = <ul className={classes[`cart-items`]}>\r\n    {cartCTX.items.map(item => <CartItem\r\n        key={item.id}\r\n        name={item.name}\r\n        price={item.price}\r\n        amount={item.amount}\r\n        onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n        onAdd={cartItemAddHandler.bind(null, item)} />)}\r\n</ul>\r\n\r\n\r\nreturn (\r\n    <Modal onClose={props.onHideCart}>\r\n        {cartItems}\r\n\r\n        {hasItems && <OrderForm\r\n            valid={validityChecker}\r\n            name={orderCartItems}\r\n        />}\r\n\r\n\r\n        <div className={classes.total}>\r\n            <span>Total Amount</span>\r\n            <span>{totalAmount}</span>\r\n        </div>\r\n        {console.log(valid)}\r\n        <div className={classes.actions}>\r\n            <button className={classes[`button--alt`]} onClick={props.onHideCart}> Close</button>\r\n            {hasItems && valid && <button\r\n                className={classes.button}\r\n                onClick={orderCartItems}> Order</button>}\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </Modal>\r\n)\r\n}\r\n\r\nexport default Cart\r\n"]},"metadata":{},"sourceType":"module"}