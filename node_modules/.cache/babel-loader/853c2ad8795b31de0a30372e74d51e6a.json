{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/Meals/MealList/MealsList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback, useReducer } from \"react\";\nimport Meals from \"../MealItem/Meals\";\nimport { DUMMY_MEALS } from \"../../../dummyMeals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intialReducerObj = {\n  meals: {\n    id: \"\",\n    name: \"Sushi\",\n    description: \"Best quality food\",\n    price: 22.99\n  },\n  loading: false,\n  error: false\n};\n\nconst mealsReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state,\n        ...state.meals,\n        loading: action.payload\n      };\n\n    case \"SET-MOVIE\":\n      return { ...state,\n        meals: {\n          id: action.payload.id,\n          name: action.payload.name,\n          description: action.payload.description,\n          price: action.payload.price\n        }\n      };\n\n    case \"ERROR\":\n      return { ...state,\n        ...state.meals,\n        error: action.payload\n      };\n\n    default:\n      return intialReducerObj;\n  }\n};\n\nconst MealsList = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(mealsReducer, intialReducerObj);\n  useEffect(() => {\n    const getIntialMeals = async () => {\n      try {\n        dispatch({\n          type: \"LOADING\",\n          payload: true\n        });\n        const req = await fetch(\"https://food-app-a635f-default-rtdb.firebaseio.com/meals.json\");\n\n        if (!req.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const res = await req.json();\n        let loadedMeals = [];\n\n        for (const key in res) {\n          loadedMeals.push({\n            id: key,\n            name: res[key].name,\n            price: res[key].price,\n            description: res[key].description\n          });\n          dispatch({\n            type: \"SET-MOVIE\",\n            payload: loadedMeals\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          payload: error.message\n        });\n      }\n\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }, this), state.error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", state.error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }, this), console.log(state.meals)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealsList, \"ER0ZlCqzMenjnhgobRjqh7Oxxjg=\");\n\n_c = MealsList;\nexport default MealsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealsList\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/Meals/MealList/MealsList.js"],"names":["useEffect","useCallback","useReducer","Meals","DUMMY_MEALS","intialReducerObj","meals","id","name","description","price","loading","error","mealsReducer","state","action","type","payload","MealsList","dispatch","getIntialMeals","req","fetch","ok","Error","res","json","loadedMeals","key","push","message","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useCallback, useReducer } from \"react\";\r\nimport Meals from \"../MealItem/Meals\";\r\nimport { DUMMY_MEALS } from \"../../../dummyMeals\";\r\n\r\nconst intialReducerObj = {\r\n  meals: {\r\n    id: \"\",\r\n    name: \"Sushi\",\r\n    description: \"Best quality food\",\r\n    price: 22.99,\r\n  },\r\n\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nconst mealsReducer = (state, action) => {\r\n\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        ...state.meals,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case \"SET-MOVIE\":\r\n      return {\r\n        ...state,\r\n        meals: {\r\n          id: action.payload.id,\r\n          name: action.payload.name,\r\n          description: action.payload.description,\r\n          price: action.payload.price,\r\n        },\r\n      };\r\n\r\n\r\n    case \"ERROR\":\r\n      return {\r\n        ...state,\r\n        ...state.meals,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return intialReducerObj;\r\n  }\r\n};\r\nconst MealsList = () => {\r\n\r\n\r\n\r\n  const [state, dispatch] = useReducer(mealsReducer, intialReducerObj);\r\n\r\n  useEffect(() => {\r\n    \r\n    const getIntialMeals = async () => {\r\n\r\n      try {\r\n        dispatch({\r\n          type: \"LOADING\",\r\n          payload: true,\r\n        });\r\n  \r\n        const req = await fetch(\r\n          \"https://food-app-a635f-default-rtdb.firebaseio.com/meals.json\"\r\n        );\r\n  \r\n        if (!req.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n  \r\n        const res = await req.json();\r\n  \r\n        let loadedMeals = [];\r\n  \r\n        for (const key in res) {\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: res[key].name,\r\n            price: res[key].price,\r\n            description: res[key].description,\r\n          });\r\n  \r\n      \r\n  \r\n          dispatch({\r\n            type: \"SET-MOVIE\",\r\n            payload: loadedMeals,\r\n          });\r\n  \r\n        \r\n  \r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          payload: error.message,\r\n        });\r\n  \r\n     \r\n      }\r\n      dispatch({\r\n        type: \"LOADING\",\r\n        payload: false,\r\n      });\r\n  \r\n    }\r\n \r\n  }, []);\r\n  \r\n \r\n  return (\r\n    <div>\r\n      {state.loading && <p>Loading...</p>}\r\n      {state.error && <p> {state.error.message} </p>} \r\n      {console.log(state.meals)}\r\n      \r\n      {/* {  state.meals.map((meals) => {\r\n          return <Meals key={meals.id} props={meals} />;\r\n        })}  */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealsList;\r\n"]},"metadata":{},"sourceType":"module"}