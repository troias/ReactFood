{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const newTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem) {\n        const updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount + action.payload.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.payload);\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: newTotalAmount\n      };\n\n    case \"REMOVE_ITEM\":\n      const existingItemIndex = state.items.findIndex(item => item.id === action.payload);\n      const existingItem = state.items[existingItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedCartItems;\n\n      if (existingItem.amount === 1) {\n        updatedCartItems = state.items.filter(item => item.id !== action.payload.id);\n      } else {\n        const updatedItem = { ...existingItem,\n          amount: existingItem.amount - 1\n        };\n        updatedCartItems = [...state.items];\n        updatedCartItems[existingItemIndex] = updatedItem;\n      }\n\n      if (updatedTotalAmount < 0) {\n        return {\n          items: [],\n          totalAmount: 0\n        };\n      }\n\n      return {\n        items: updatedCartItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    default:\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItem = item => {\n    dispCartAction({\n      type: \"ADD_ITEM\",\n      payload: item\n    });\n  };\n\n  const removeItem = id => {\n    dispCartAction({\n      type: \"REMOVE_ITEM\",\n      payload: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItem,\n    removeItem: removeItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"luX5xNBT3kmWhTLTtUES9t80Qgc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","existingItemIndex","existingItem","updatedTotalAmount","updatedCartItems","filter","CartProvider","props","cartState","dispCartAction","addItem","removeItem","cartContext","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./CartContext\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      const newTotalAmount =\r\n        state.totalAmount + action.payload.price * action.payload.amount;\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n      let updatedItems;\r\n\r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.payload.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.payload);\r\n      }\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: newTotalAmount,\r\n      };\r\n\r\n    case \"REMOVE_ITEM\":\r\n        const existingItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.payload\r\n          );\r\n          const existingItem = state.items[existingItemIndex];\r\n          const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n          let updatedCartItems;\r\n          if (existingItem.amount === 1) {\r\n            updatedCartItems = state.items.filter(item => item.id !== action.payload.id);\r\n          } else {\r\n            const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n            updatedCartItems = [...state.items];\r\n            updatedCartItems[existingItemIndex] = updatedItem;\r\n          }\r\n          if (updatedTotalAmount < 0 ) {\r\n            return {\r\n              items: [], \r\n              totalAmount: 0,\r\n            }\r\n          }\r\n\r\n          return {\r\n            items: updatedCartItems,\r\n            totalAmount: updatedTotalAmount\r\n          };\r\n        default: \r\n      }\r\n   \r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItem = (item) => {\r\n    dispCartAction({\r\n      type: \"ADD_ITEM\",\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    dispCartAction({\r\n      type: \"REMOVE_ITEM\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItem,\r\n    removeItem: removeItem,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}