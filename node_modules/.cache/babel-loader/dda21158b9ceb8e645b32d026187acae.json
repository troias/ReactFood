{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useInput from \"../../../customHooks/useInput\";\nimport classes from \"./CheckOutForm.css\";\nimport { emailValidator, nameInputValidator, postalCodeInputValidator, cityInputValidator } from \"../../../UtilityFunctions/inputValidationFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = props => {\n  _s();\n\n  const {\n    value: enteredNameValue,\n    hasError: nameInputError,\n    valueChangedHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: valueIsValid // reset: resetInput\n\n  } = useInput(nameInputValidator);\n  const {\n    value: enteredEmailValue,\n    hasError: emailInputError,\n    valueChangedHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailIsValid // reset: resetEmail\n\n  } = useInput(emailValidator);\n  const {\n    value: enteredPostalCodeValue,\n    hasError: enteredPostalCodeInputError,\n    valueChangedHandler: enteredPostalCodeChangeHandler,\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\n    isValid: enteredPostalCodeIsValid // reset: enteredPostalCodeEmail\n\n  } = useInput(postalCodeInputValidator);\n  const {\n    value: enteredCityValue,\n    hasError: enteredCityInputError,\n    valueChangedHandler: enteredCityChangeHandler,\n    inputBlurHandler: enteredCityInputBlurHandler,\n    isValid: enteredCityIsValid // reset: enteredCityEmail\n\n  } = useInput(cityInputValidator);\n  const formValid = valueIsValid && emailIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n  const sendOrderHandler = event => {\n    event.preventDefault();\n    const orderInfo = {\n      name: enteredNameValue,\n      email: enteredEmailValue,\n      city: enteredCityValue,\n      postalCode: enteredPostalCodeValue\n    };\n\n    if (formValid) {\n      props.valid(true);\n    }\n\n    props.orderHandler(orderInfo); // console.log(orderInfo)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: sendOrderHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \" Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        type: \"text\",\n        id: \"name\",\n        value: enteredNameValue,\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmailValue,\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Postal Code\",\n        type: \"text\",\n        id: \"Postal Code\",\n        value: enteredPostalCodeValue,\n        onChange: enteredPostalCodeChangeHandler,\n        onBlur: enteredPostalCodeInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"City\",\n        type: \"text\",\n        id: \"City\",\n        value: enteredCityValue,\n        onChange: enteredCityChangeHandler,\n        onBlur: enteredCityInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onClose,\n        children: [\" \", \"Cancel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), formValid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.invalid,\n      children: [nameInputError && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Cannot be empty \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 28\n      }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Does not include \\\"@\\\" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }, this), enteredPostalCodeInputError && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Has to be a number over 1 and under 6 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), enteredCityInputError && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Can't be empty \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderForm, \"a7KBHxuSPNZnWgIvaijwGMpc2cU=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js"],"names":["React","useInput","classes","emailValidator","nameInputValidator","postalCodeInputValidator","cityInputValidator","OrderForm","props","value","enteredNameValue","hasError","nameInputError","valueChangedHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","isValid","valueIsValid","enteredEmailValue","emailInputError","emailChangeHandler","emailInputBlurHandler","emailIsValid","enteredPostalCodeValue","enteredPostalCodeInputError","enteredPostalCodeChangeHandler","enteredPostalCodeInputBlurHandler","enteredPostalCodeIsValid","enteredCityValue","enteredCityInputError","enteredCityChangeHandler","enteredCityInputBlurHandler","enteredCityIsValid","formValid","sendOrderHandler","event","preventDefault","orderInfo","name","email","city","postalCode","valid","orderHandler","form","control","actions","onClose","submit","invalid"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useInput from \"../../../customHooks/useInput\";\r\nimport classes from \"./CheckOutForm.css\";\r\n\r\nimport {\r\n  emailValidator,\r\n  nameInputValidator,\r\n  postalCodeInputValidator,\r\n  cityInputValidator,\r\n} from \"../../../UtilityFunctions/inputValidationFunctions\";\r\n\r\nconst OrderForm = (props) => {\r\n  const {\r\n    value: enteredNameValue,\r\n    hasError: nameInputError,\r\n    valueChangedHandler: nameChangeHandler,\r\n    inputBlurHandler: nameInputBlurHandler,\r\n    isValid: valueIsValid,\r\n    // reset: resetInput\r\n  } = useInput(nameInputValidator);\r\n\r\n  const {\r\n    value: enteredEmailValue,\r\n    hasError: emailInputError,\r\n    valueChangedHandler: emailChangeHandler,\r\n    inputBlurHandler: emailInputBlurHandler,\r\n    isValid: emailIsValid,\r\n    // reset: resetEmail\r\n  } = useInput(emailValidator);\r\n\r\n  const {\r\n    value: enteredPostalCodeValue,\r\n    hasError: enteredPostalCodeInputError,\r\n    valueChangedHandler: enteredPostalCodeChangeHandler,\r\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\r\n    isValid: enteredPostalCodeIsValid,\r\n    // reset: enteredPostalCodeEmail\r\n  } = useInput(postalCodeInputValidator);\r\n\r\n  const {\r\n    value: enteredCityValue,\r\n    hasError: enteredCityInputError,\r\n    valueChangedHandler: enteredCityChangeHandler,\r\n    inputBlurHandler: enteredCityInputBlurHandler,\r\n    isValid: enteredCityIsValid,\r\n    // reset: enteredCityEmail\r\n  } = useInput(cityInputValidator);\r\n\r\n  const formValid =\r\n    valueIsValid &&\r\n    emailIsValid &&\r\n    enteredCityIsValid &&\r\n    enteredPostalCodeIsValid;\r\n\r\n  const sendOrderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const orderInfo = {\r\n      name: enteredNameValue,\r\n      email: enteredEmailValue,\r\n      city: enteredCityValue,\r\n      postalCode: enteredPostalCodeValue,\r\n    };\r\n\r\n    if (formValid) {\r\n      props.valid(true);\r\n    }\r\n\r\n    props.orderHandler(orderInfo);\r\n    // console.log(orderInfo)\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={sendOrderHandler}>\r\n\r\n      <div className={classes.control}>\r\n        <label value=\"Name\"> Name</label>\r\n\r\n        <input\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={enteredNameValue}\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.control}>\r\n        <label value=\"Name\">Email</label>\r\n\r\n        <input\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={enteredEmailValue}\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.control}>\r\n        <label value=\"Name\">Postal Code</label>\r\n\r\n        <input\r\n          placeholder=\"Postal Code\"\r\n          type=\"text\"\r\n          id=\"Postal Code\"\r\n          value={enteredPostalCodeValue}\r\n          onChange={enteredPostalCodeChangeHandler}\r\n          onBlur={enteredPostalCodeInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.control}>\r\n        <label value=\"Name\">City</label>\r\n\r\n        <input\r\n          placeholder=\"City\"\r\n          type=\"text\"\r\n          id=\"City\"\r\n          value={enteredCityValue}\r\n          onChange={enteredCityChangeHandler}\r\n          onBlur={enteredCityInputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onClose}>\r\n          {\" \"}\r\n          Cancel\r\n        </button>\r\n        {formValid && <button className={classes.submit}>Confirm </button>}\r\n      </div>\r\n\r\n      <div className={classes.invalid}>\r\n        {nameInputError && <label> Cannot be empty </label>}\r\n        {emailInputError && <label> Does not include \"@\" </label>}\r\n        {enteredPostalCodeInputError && (\r\n          <label> Has to be a number over 1 and under 6 </label>\r\n        )}\r\n        {enteredCityInputError && <label> Can't be empty </label>}\r\n      </div>\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n"]},"metadata":{},"sourceType":"module"}