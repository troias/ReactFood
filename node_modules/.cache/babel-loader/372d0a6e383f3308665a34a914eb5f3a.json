{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport useInput from \"../../../customHooks/useInput\";\nimport classes from \"../../UI/Forms/CheckOutForm.css\";\nimport { emailValidator, nameInputValidator, postalCodeInputValidator, cityInputValidator } from \"../../../UtilityFunctions/inputValidationFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = props => {\n  _s();\n\n  const {\n    value: enteredNameValue,\n    hasError: nameInputError,\n    valueChangedHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: valueIsValid // reset: resetInput\n\n  } = useInput(nameInputValidator);\n  const {\n    value: enteredEmailValue,\n    hasError: emailInputError,\n    valueChangedHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailIsValid // reset: resetEmail\n\n  } = useInput(emailValidator);\n  const {\n    value: enteredPostalCodeValue,\n    hasError: enteredPostalCodeInputError,\n    valueChangedHandler: enteredPostalCodeChangeHandler,\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\n    isValid: enteredPostalCodeIsValid // reset: enteredPostalCodeEmail\n\n  } = useInput(postalCodeInputValidator);\n  const {\n    value: enteredCityValue,\n    hasError: enteredCityInputError,\n    valueChangedHandler: enteredCityChangeHandler,\n    inputBlurHandler: enteredCityInputBlurHandler,\n    isValid: enteredCityIsValid // reset: enteredCityEmail\n\n  } = useInput(cityInputValidator);\n  const formValid = valueIsValid && emailIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n  const sendOrderHandler = event => {\n    event.preventDefault();\n    const orderInfo = {\n      name: enteredNameValue,\n      email: enteredEmailValue,\n      city: enteredCityValue,\n      postalCode: enteredPostalCodeValue\n    };\n\n    if (formValid) {\n      props.valid(true);\n    }\n\n    props.orderHandler(orderInfo); // console.log(orderInfo)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendOrderHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \" Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        type: \"text\",\n        id: \"name\",\n        value: enteredNameValue,\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmailValue,\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Postal Code\",\n        type: \"text\",\n        id: \"Postal Code\",\n        value: enteredPostalCodeValue,\n        onChange: enteredPostalCodeChangeHandler,\n        onBlur: enteredPostalCodeInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        value: \"Name\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"City\",\n        type: \"text\",\n        id: \"City\",\n        value: enteredCityValue,\n        onChange: enteredCityChangeHandler,\n        onBlur: enteredCityInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onClose,\n        children: \" Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), formValid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Cannot be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 32\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Does not include \\\"@\\\" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), enteredPostalCodeInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Has to be a number over 1 and under 6 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), enteredCityInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Can't be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderForm, \"DRwxiHBRWDJB2phFPnHpVFCLc/8=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js"],"names":["React","useEffect","useInput","classes","emailValidator","nameInputValidator","postalCodeInputValidator","cityInputValidator","OrderForm","props","value","enteredNameValue","hasError","nameInputError","valueChangedHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","isValid","valueIsValid","enteredEmailValue","emailInputError","emailChangeHandler","emailInputBlurHandler","emailIsValid","enteredPostalCodeValue","enteredPostalCodeInputError","enteredPostalCodeChangeHandler","enteredPostalCodeInputBlurHandler","enteredPostalCodeIsValid","enteredCityValue","enteredCityInputError","enteredCityChangeHandler","enteredCityInputBlurHandler","enteredCityIsValid","formValid","sendOrderHandler","event","preventDefault","orderInfo","name","email","city","postalCode","valid","orderHandler","form","control","actions","onClose","submit"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useInput from \"../../../customHooks/useInput\";\r\nimport classes from \"../../UI/Forms/CheckOutForm.css\"\r\nimport {\r\n    emailValidator,\r\n    nameInputValidator,\r\n    postalCodeInputValidator,\r\n    cityInputValidator,\r\n} from \"../../../UtilityFunctions/inputValidationFunctions\";\r\n\r\nconst OrderForm = (props) => {\r\n\r\n    const {\r\n        value: enteredNameValue,\r\n        hasError: nameInputError,\r\n        valueChangedHandler: nameChangeHandler,\r\n        inputBlurHandler: nameInputBlurHandler,\r\n        isValid: valueIsValid,\r\n        // reset: resetInput\r\n    } = useInput(nameInputValidator);\r\n\r\n    const {\r\n        value: enteredEmailValue,\r\n        hasError: emailInputError,\r\n        valueChangedHandler: emailChangeHandler,\r\n        inputBlurHandler: emailInputBlurHandler,\r\n        isValid: emailIsValid,\r\n        // reset: resetEmail\r\n    } = useInput(emailValidator);\r\n\r\n    const {\r\n        value: enteredPostalCodeValue,\r\n        hasError: enteredPostalCodeInputError,\r\n        valueChangedHandler: enteredPostalCodeChangeHandler,\r\n        inputBlurHandler: enteredPostalCodeInputBlurHandler,\r\n        isValid: enteredPostalCodeIsValid,\r\n        // reset: enteredPostalCodeEmail\r\n    } = useInput(postalCodeInputValidator);\r\n\r\n    const {\r\n        value: enteredCityValue,\r\n        hasError: enteredCityInputError,\r\n        valueChangedHandler: enteredCityChangeHandler,\r\n        inputBlurHandler: enteredCityInputBlurHandler,\r\n        isValid: enteredCityIsValid,\r\n        // reset: enteredCityEmail\r\n    } = useInput(cityInputValidator);\r\n\r\n    const formValid =\r\n        valueIsValid &&\r\n        emailIsValid &&\r\n        enteredCityIsValid &&\r\n        enteredPostalCodeIsValid;\r\n\r\n\r\n\r\n    const sendOrderHandler = (event) => {\r\n        event.preventDefault();\r\n        const orderInfo = {\r\n            name: enteredNameValue,\r\n            email: enteredEmailValue,\r\n            city: enteredCityValue,\r\n            postalCode: enteredPostalCodeValue,\r\n        };\r\n\r\n        if (formValid) {\r\n            props.valid(true);\r\n        }\r\n\r\n        props.orderHandler(orderInfo);\r\n        // console.log(orderInfo)\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={sendOrderHandler} className={classes.form}>\r\n            <div className={classes.control}>\r\n\r\n                <label value=\"Name\"> Name</label>\r\n                <br />\r\n                <input\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    value={enteredNameValue}\r\n                    onChange={nameChangeHandler}\r\n                    onBlur={nameInputBlurHandler}\r\n                />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <br />\r\n                <label value=\"Name\">Email</label>\r\n                <br />\r\n                <input\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    value={enteredEmailValue}\r\n                    onChange={emailChangeHandler}\r\n                    onBlur={emailInputBlurHandler}\r\n                />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <br />\r\n                <label value=\"Name\">Postal Code</label>\r\n                <br />\r\n                <input\r\n                    placeholder=\"Postal Code\"\r\n                    type=\"text\"\r\n                    id=\"Postal Code\"\r\n                    value={enteredPostalCodeValue}\r\n                    onChange={enteredPostalCodeChangeHandler}\r\n                    onBlur={enteredPostalCodeInputBlurHandler}\r\n                />\r\n                <br />\r\n            </div>\r\n            <div className={classes.control}>\r\n            <br />\r\n                <label value=\"Name\">City</label>\r\n                <br />\r\n                <input\r\n                    placeholder=\"City\"\r\n                    type=\"text\"\r\n                    id=\"City\"\r\n                    value={enteredCityValue}\r\n                    onChange={enteredCityChangeHandler}\r\n                    onBlur={enteredCityInputBlurHandler}\r\n                />\r\n              \r\n            </div>\r\n\r\n            <div className={classes.actions}>\r\n                <button type=\"button\" onClick={props.onClose}> Cancel</button>\r\n                {formValid && <button className={classes.submit} >Confirm </button>}\r\n            </div>\r\n\r\n\r\n            {nameInputError && <p className={\"error-text\"}> Cannot be empty </p>}\r\n            {emailInputError && (\r\n                <p className={\"error-text\"}> Does not include \"@\" </p>\r\n            )}\r\n            {enteredPostalCodeInputError && (\r\n                <p className={\"error-text\"}> Has to be a number over 1 and under 6 </p>\r\n            )}\r\n            {enteredCityInputError && (\r\n                <p className={\"error-text\"}> Can't be empty </p>\r\n            )}\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default OrderForm;\r\n"]},"metadata":{},"sourceType":"module"}