{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const newTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      const updatedItems = state.items.concat(action.payload);\n      return {\n        items: updatedItems,\n        totalAmount: newTotalAmount\n      };\n\n    case \"REMOVE_ITEM\":\n      return state.items + action.item;\n\n    default:\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItem = item => {\n    dispCartAction({\n      type: \"ADD_ITEM\",\n      payload: item\n    });\n  };\n\n  const removeItem = item => {\n    dispCartAction({\n      type: \"REMOVE_ITEM\",\n      payload: item\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItem,\n    removeItem: removeItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"luX5xNBT3kmWhTLTtUES9t80Qgc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","updatedItems","concat","CartProvider","props","cartState","dispCartAction","addItem","removeItem","cartContext","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAEE,YAAMC,cAAc,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,OAAP,CAAeC,KAAf,GAAuBJ,MAAM,CAACG,OAAP,CAAeE,MAAjF;AACA,YAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAAP,CAAeM,EAAzD,CAA9B;AACA,YAAMC,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,OAA1B,CAArB;AAEA,aAAO;AACLP,QAAAA,KAAK,EAAEc,YADF;AAELb,QAAAA,WAAW,EAAEK;AAFR,OAAP;;AAKF,SAAK,aAAL;AACE,aAAOH,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACQ,IAA5B;;AAEA;AAfJ;AAiBD,CAlBD;;AAoBA,MAAMI,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BtB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA9C;;AAEA,QAAMqB,OAAO,GAAIR,IAAD,IAAU;AACxBO,IAAAA,cAAc,CAAC;AACbd,MAAAA,IAAI,EAAE,UADO;AAEbE,MAAAA,OAAO,EAAEK;AAFI,KAAD,CAAd;AAID,GALD;;AAOA,QAAMS,UAAU,GAAIT,IAAD,IAAU;AAC3BO,IAAAA,cAAc,CAAC;AACbd,MAAAA,IAAI,EAAE,aADO;AAEbE,MAAAA,OAAO,EAAEK;AAFI,KAAD,CAAd;AAID,GALD;;AAOA,QAAMU,WAAW,GAAG;AAClBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADC;AAElBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFL;AAGlBmB,IAAAA,OAAO,EAAEA,OAHS;AAIlBC,IAAAA,UAAU,EAAEA;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BD;;GAAMP,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./CartContext\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      \r\n      const newTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\r\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id)\r\n      const updatedItems = state.items.concat(action.payload);\r\n      \r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: newTotalAmount,\r\n      };\r\n\r\n    case \"REMOVE_ITEM\":\r\n      return state.items + action.item;\r\n\r\n      default:\r\n  }\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItem = (item) => {\r\n    dispCartAction({\r\n      type: \"ADD_ITEM\",\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const removeItem = (item) => {\r\n    dispCartAction({\r\n      type: \"REMOVE_ITEM\",\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItem,\r\n    removeItem: removeItem,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}