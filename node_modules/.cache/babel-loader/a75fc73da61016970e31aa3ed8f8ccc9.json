{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const newTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem) {\n        const updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount + action.payload.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.payload);\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: newTotalAmount\n      };\n\n    case \"REMOVE_ITEM\":\n      //gets id\n      const existingItemIndex = state.items.findIndex(item => item.id === action.payload);\n      const existingItem = state.items[existingItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedCartItems;\n\n      if (existingItem.amount < 1) {\n        updatedCartItems = state.items.filter(item => item.id !== action.payload.id);\n        console.log(\"entered1\");\n      } else {\n        const updatedItem = { ...existingItem,\n          amount: existingItem.amount - 1\n        };\n        updatedCartItems = [...state.items];\n        updatedCartItems[existingItemIndex] = updatedItem;\n        console.log(\"entered0\");\n      }\n\n      if (updatedTotalAmount < 1) {\n        return {\n          items: [],\n          totalAmount: 0,\n          amount: 0\n        };\n      }\n\n      return {\n        items: updatedCartItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case \"CLEAR\":\n      return defaultCartState;\n\n    default:\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItem = item => {\n    dispCartAction({\n      type: \"ADD_ITEM\",\n      payload: item\n    });\n  };\n\n  const clearCart = () => {\n    dispCartAction({\n      type: \"CLEAR\"\n    });\n  };\n\n  const removeItem = id => {\n    dispCartAction({\n      type: \"REMOVE_ITEM\",\n      payload: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItem,\n    removeItem: removeItem,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"luX5xNBT3kmWhTLTtUES9t80Qgc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/contextStore/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","existingItemIndex","existingItem","updatedTotalAmount","updatedCartItems","filter","console","log","CartProvider","props","cartState","dispCartAction","addItem","clearCart","removeItem","cartContext","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./CartContext\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      const newTotalAmount =\r\n        state.totalAmount + action.payload.price * action.payload.amount;\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n      let updatedItems;\r\n\r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.payload.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.payload);\r\n      }\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: newTotalAmount,\r\n      };\r\n\r\n    case \"REMOVE_ITEM\":\r\n      //gets id\r\n      const existingItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload\r\n      );\r\n      const existingItem = state.items[existingItemIndex];\r\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n      let updatedCartItems;\r\n\r\n      if (existingItem.amount < 1) {\r\n        updatedCartItems = state.items.filter(item => \r\n          item.id !== action.payload.id);\r\n          console.log(\"entered1\")\r\n      } else {\r\n        const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n        updatedCartItems = [...state.items];\r\n        updatedCartItems[existingItemIndex] = updatedItem;\r\n        console.log(\"entered0\")\r\n      }\r\n      if (updatedTotalAmount < 1) {\r\n\r\n\r\n        return {\r\n          items: [],\r\n          totalAmount: 0,\r\n          amount: 0\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return {\r\n        items: updatedCartItems,\r\n        totalAmount: updatedTotalAmount\r\n      };\r\n\r\n    case \"CLEAR\":\r\n      return defaultCartState\r\n    default:\r\n  }\r\n\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItem = (item) => {\r\n    dispCartAction({\r\n      type: \"ADD_ITEM\",\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispCartAction({\r\n      type: \"CLEAR\",\r\n    });\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    dispCartAction({\r\n      type: \"REMOVE_ITEM\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItem,\r\n    removeItem: removeItem,\r\n    clearCart\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}