{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport useInput from \"../../../customHooks/useInput\";\nimport { emailValidator, nameInputValidator, postalCodeInputValidator, cityInputValidator } from \"../../../UtilityFunctions/inputValidationFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = props => {\n  _s();\n\n  const {\n    value: enteredNameValue,\n    hasError: nameInputError,\n    valueChangedHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: valueIsValid // reset: resetInput\n\n  } = useInput(nameInputValidator);\n  const {\n    value: enteredEmailValue,\n    hasError: emailInputError,\n    valueChangedHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailIsValid // reset: resetEmail\n\n  } = useInput(emailValidator);\n  const {\n    value: enteredPostalCodeValue,\n    hasError: enteredPostalCodeInputError,\n    valueChangedHandler: enteredPostalCodeChangeHandler,\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\n    isValid: enteredPostalCodeIsValid // reset: enteredPostalCodeEmail\n\n  } = useInput(postalCodeInputValidator);\n  const {\n    value: enteredCityValue,\n    hasError: enteredCityInputError,\n    valueChangedHandler: enteredCityChangeHandler,\n    inputBlurHandler: enteredCityInputBlurHandler,\n    isValid: enteredCityIsValid // reset: enteredCityEmail\n\n  } = useInput(cityInputValidator);\n  useEffect(() => {\n    if (valueIsValid && emailIsValid && enteredCityIsValid && enteredPostalCodeIsValid) {\n      props.valid(true);\n    }\n  }, [valueIsValid, emailIsValid, enteredCityIsValid, enteredPostalCodeIsValid, props.valid, props]);\n  useEffect(() => {\n    const order = {\n      name: enteredNameValue,\n      email: enteredEmailValue,\n      postalCode: enteredPostalCodeValue,\n      city: enteredCityValue\n    };\n    console.log(order); // props.name(order);\n  }, [enteredNameValue, enteredEmailValue, enteredPostalCodeValue, enteredCityValue, enteredCityIsValid, enteredPostalCodeIsValid, props]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \" Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      type: \"text\",\n      id: \"name\",\n      value: enteredNameValue,\n      onChange: nameChangeHandler,\n      onBlur: nameInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      id: \"email\",\n      value: enteredEmailValue,\n      onChange: emailChangeHandler,\n      onBlur: emailInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"Postal Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Postal Code\",\n      type: \"text\",\n      id: \"Postal Code\",\n      value: enteredPostalCodeValue,\n      onChange: enteredPostalCodeChangeHandler,\n      onBlur: enteredPostalCodeInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"City\",\n      type: \"text\",\n      id: \"City\",\n      value: enteredCityValue,\n      enteredCityChangeHandler: true,\n      onChange: enteredCityChangeHandler,\n      onBlur: enteredCityInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Cannot be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 26\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Does not include \\\"@\\\" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), enteredPostalCodeInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Has to be a number over 1 and under 6 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), enteredCityInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Can't be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderForm, \"UUFsKyeelMaruGylys3Hs0orq4w=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js"],"names":["React","useEffect","useInput","emailValidator","nameInputValidator","postalCodeInputValidator","cityInputValidator","OrderForm","props","value","enteredNameValue","hasError","nameInputError","valueChangedHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","isValid","valueIsValid","enteredEmailValue","emailInputError","emailChangeHandler","emailInputBlurHandler","emailIsValid","enteredPostalCodeValue","enteredPostalCodeInputError","enteredPostalCodeChangeHandler","enteredPostalCodeInputBlurHandler","enteredPostalCodeIsValid","enteredCityValue","enteredCityInputError","enteredCityChangeHandler","enteredCityInputBlurHandler","enteredCityIsValid","valid","order","name","email","postalCode","city","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useInput from \"../../../customHooks/useInput\";\r\nimport {\r\n  emailValidator,\r\n  nameInputValidator,\r\n  postalCodeInputValidator,\r\n  cityInputValidator,\r\n} from \"../../../UtilityFunctions/inputValidationFunctions\";\r\n\r\nconst OrderForm = (props) => {\r\n  const {\r\n    value: enteredNameValue,\r\n    hasError: nameInputError,\r\n    valueChangedHandler: nameChangeHandler,\r\n    inputBlurHandler: nameInputBlurHandler,\r\n    isValid: valueIsValid,\r\n    // reset: resetInput\r\n  } = useInput(nameInputValidator);\r\n\r\n  const {\r\n    value: enteredEmailValue,\r\n    hasError: emailInputError,\r\n    valueChangedHandler: emailChangeHandler,\r\n    inputBlurHandler: emailInputBlurHandler,\r\n    isValid: emailIsValid,\r\n    // reset: resetEmail\r\n  } = useInput(emailValidator);\r\n\r\n  const {\r\n    value: enteredPostalCodeValue,\r\n    hasError: enteredPostalCodeInputError,\r\n    valueChangedHandler: enteredPostalCodeChangeHandler,\r\n    inputBlurHandler: enteredPostalCodeInputBlurHandler,\r\n    isValid: enteredPostalCodeIsValid,\r\n    // reset: enteredPostalCodeEmail\r\n  } = useInput(postalCodeInputValidator);\r\n\r\n  const {\r\n    value: enteredCityValue,\r\n    hasError: enteredCityInputError,\r\n    valueChangedHandler: enteredCityChangeHandler,\r\n    inputBlurHandler: enteredCityInputBlurHandler,\r\n    isValid: enteredCityIsValid,\r\n    // reset: enteredCityEmail\r\n  } = useInput(cityInputValidator);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      valueIsValid &&\r\n      emailIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid\r\n    ) {\r\n      props.valid(true);\r\n    }\r\n  }, [\r\n    valueIsValid,\r\n    emailIsValid,\r\n    enteredCityIsValid,\r\n    enteredPostalCodeIsValid,\r\n    props.valid,\r\n    props,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const order = {\r\n      name: enteredNameValue,\r\n      email: enteredEmailValue,\r\n      postalCode: enteredPostalCodeValue,\r\n      city: enteredCityValue,\r\n    };\r\n    console.log(order)\r\n    // props.name(order);\r\n  }, [\r\n    enteredNameValue,\r\n    enteredEmailValue,\r\n    enteredPostalCodeValue,\r\n    enteredCityValue,\r\n    enteredCityIsValid,\r\n    enteredPostalCodeIsValid,\r\n    props,\r\n  ]);\r\n\r\n  return (\r\n    <form>\r\n      <label value=\"Name\"> Name</label>\r\n      <br />\r\n      <input\r\n        placeholder=\"Name\"\r\n        type=\"text\"\r\n        id=\"name\"\r\n        value={enteredNameValue}\r\n        onChange={nameChangeHandler}\r\n        onBlur={nameInputBlurHandler}\r\n      />\r\n\r\n      <br />\r\n      <label value=\"Name\">Email</label>\r\n      <br />\r\n      <input\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        id=\"email\"\r\n        value={enteredEmailValue}\r\n        onChange={emailChangeHandler}\r\n        onBlur={emailInputBlurHandler}\r\n      />\r\n      <br />\r\n      <label value=\"Name\">Postal Code</label>\r\n      <br />\r\n      <input\r\n        placeholder=\"Postal Code\"\r\n        type=\"text\"\r\n        id=\"Postal Code\"\r\n        value={enteredPostalCodeValue}\r\n        onChange={enteredPostalCodeChangeHandler}\r\n        onBlur={enteredPostalCodeInputBlurHandler}\r\n      />\r\n      <br />\r\n      <label value=\"Name\">City</label>\r\n      <br />\r\n      <input\r\n        placeholder=\"City\"\r\n        type=\"text\"\r\n        id=\"City\"\r\n        value={enteredCityValue}\r\n        enteredCityChangeHandler\r\n        onChange={enteredCityChangeHandler}\r\n        onBlur={enteredCityInputBlurHandler}\r\n      />\r\n\r\n      {nameInputError && <p className={\"error-text\"}> Cannot be empty </p>}\r\n      {emailInputError && (\r\n        <p className={\"error-text\"}> Does not include \"@\" </p>\r\n      )}\r\n      {enteredPostalCodeInputError && (\r\n        <p className={\"error-text\"}> Has to be a number over 1 and under 6 </p>\r\n      )}\r\n      {enteredCityInputError && (\r\n        <p className={\"error-text\"}> Can't be empty </p>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n"]},"metadata":{},"sourceType":"module"}