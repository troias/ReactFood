{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useInput from '../../../customHooks/useInput';\nimport { emailValidator, nameInputValidator } from \"../../../UtilityFunctions/inputValidationFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = props => {\n  _s();\n\n  const {\n    value: enteredNameValue,\n    hasError: nameInputError,\n    valueChangedHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: valueIsValid,\n    reset: resetInput\n  } = useInput(nameInputValidator);\n  const {\n    value: enteredEmailValue,\n    hasError: emailInputError,\n    valueChangedHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailIsValid,\n    reset: resetEmail\n  } = useInput(emailValidator); // console.log(state.touched)\n\n  if (valueIsValid && emailIsValid) {\n    props.valid(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \" Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      type: \"text\",\n      id: \"name\",\n      value: enteredNameValue,\n      onChange: nameChangeHandler,\n      onBlur: nameInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      value: \"Name\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      id: \"email\",\n      value: enteredEmailValue,\n      onChange: emailChangeHandler,\n      onBlur: emailInputBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Cannot be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 32\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Does not include \\\"@\\\" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderForm, \"Q5zPND6zRpcMnjozpcyQ9xcZiaA=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/home/troias/udemy/project-2/01-starting-project/src/components/UI/Forms/OrderForm.js"],"names":["React","useInput","emailValidator","nameInputValidator","OrderForm","props","value","enteredNameValue","hasError","nameInputError","valueChangedHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","isValid","valueIsValid","reset","resetInput","enteredEmailValue","emailInputError","emailChangeHandler","emailInputBlurHandler","emailIsValid","resetEmail","valid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,oDAAnD;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAKzB,QAAM;AACFC,IAAAA,KAAK,EAAEC,gBADL;AAEFC,IAAAA,QAAQ,EAAEC,cAFR;AAGFC,IAAAA,mBAAmB,EAAEC,iBAHnB;AAIFC,IAAAA,gBAAgB,EAAEC,oBAJhB;AAKFC,IAAAA,OAAO,EAAEC,YALP;AAMFC,IAAAA,KAAK,EAAEC;AANL,MAOFhB,QAAQ,CAACE,kBAAD,CAPZ;AASA,QAAM;AACFG,IAAAA,KAAK,EAAEY,iBADL;AAEFV,IAAAA,QAAQ,EAAEW,eAFR;AAGFT,IAAAA,mBAAmB,EAAEU,kBAHnB;AAIFR,IAAAA,gBAAgB,EAAES,qBAJhB;AAKFP,IAAAA,OAAO,EAAEQ,YALP;AAMFN,IAAAA,KAAK,EAAEO;AANL,MAOFtB,QAAQ,CAACC,cAAD,CAPZ,CAdyB,CAuBzB;;AAEA,MAAIa,YAAY,IAAIO,YAApB,EAAkC;AAC9BjB,IAAAA,KAAK,CAACmB,KAAN,CAAY,IAAZ;AACH;;AAED,sBACI;AAAA,4BACI;AAAO,MAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACI,MAAA,WAAW,EAAC,MADhB;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAC,MAHP;AAII,MAAA,KAAK,EAAEjB,gBAJX;AAKI,MAAA,QAAQ,EAAEI,iBALd;AAMI,MAAA,MAAM,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWI;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAO,MAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AACI,MAAA,WAAW,EAAC,OADhB;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,EAAE,EAAC,OAHP;AAII,MAAA,KAAK,EAAEK,iBAJX;AAKI,MAAA,QAAQ,EAAEE,kBALd;AAMI,MAAA,MAAM,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,YAdJ,EAqBKZ,cAAc,iBAAI;AAAG,MAAA,SAAS,EAAE,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBvB,EAsBKU,eAAe,iBAAI;AAAG,MAAA,SAAS,EAAE,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAxDD;;GAAMf,S;UAYEH,Q,EASAA,Q;;;KArBFG,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport useInput from '../../../customHooks/useInput'\r\nimport { emailValidator, nameInputValidator } from \"../../../UtilityFunctions/inputValidationFunctions\"\r\nconst OrderForm = (props) => {\r\n   \r\n    \r\n\r\n\r\n    const {\r\n        value: enteredNameValue,\r\n        hasError: nameInputError,\r\n        valueChangedHandler: nameChangeHandler,\r\n        inputBlurHandler: nameInputBlurHandler,\r\n        isValid: valueIsValid,\r\n        reset: resetInput\r\n    } = useInput(nameInputValidator)\r\n\r\n    const {\r\n        value: enteredEmailValue,\r\n        hasError: emailInputError,\r\n        valueChangedHandler: emailChangeHandler,\r\n        inputBlurHandler: emailInputBlurHandler,\r\n        isValid: emailIsValid,\r\n        reset: resetEmail\r\n    } = useInput(emailValidator)\r\n\r\n    // console.log(state.touched)\r\n\r\n    if (valueIsValid && emailIsValid) {\r\n        props.valid(true)\r\n    }\r\n  \r\n    return (\r\n        <form>\r\n            <label value=\"Name\"> Name</label>\r\n            <br/>\r\n            <input\r\n                placeholder=\"Name\"\r\n                type='text'\r\n                id='name'\r\n                value={enteredNameValue}\r\n                onChange={nameChangeHandler}\r\n                onBlur={nameInputBlurHandler} />\r\n                \r\n            <br />\r\n            <label value=\"Name\">Email</label>\r\n            <br/>\r\n            <input\r\n                placeholder=\"Email\"\r\n                type='email'\r\n                id='email'\r\n                value={enteredEmailValue}\r\n                onChange={emailChangeHandler}\r\n                onBlur={emailInputBlurHandler} />\r\n            {nameInputError && <p className={\"error-text\"}> Cannot be empty </p>}\r\n            {emailInputError && <p className={\"error-text\"}> Does not include \"@\" </p>}\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default OrderForm\r\n"]},"metadata":{},"sourceType":"module"}